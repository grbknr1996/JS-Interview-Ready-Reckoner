//CORS:CROSS ORIGIN RESOURCE SHARING
//What is Cross Origin?
//IT IS A MECHANISM WHERE TWO WEBAPPS(WEBAPPS SHOULD BE IN DIFFERENT ORIGIN)
//SHARE RESOURCES USING ADDITIONAL HTTP HEADERS

//GOURAB.IN WANTS TO REQUEST DATA FROM EXTERNAL DOMAINS LIKE FROM GOOGLE.COM/API/GETDATA --THIS WAS NEVER ALLOWED
//GOURAB.IN WANTS TO REQUEST DATA FROM SUB-DOMAINS LIKE API.GOURAB.IN--THIS WAS NEVER ALLOWED
//GOURAB.IN:80 WANTS TO REQUEST DATA FROM GOURAB.IN:5050--THIS WAS NOT ALLOWED
//HTTP://GOURAB.IN WANTS TO REQUEST DATA FROM HTTPS://GOURAB.IN--THIS WAS NOT ALLOWED

//BUT AFTER CORS THIS HAS BEEN MADE POSSIBLE

// origin1  |  origin2
//    preflight call
//   app A ---> app B

//FIRST CALL A TO B --PREFLIGHT CALL
//IF THE  PREFLIGHT CALL FROM A TO B IS SUCCESSFULL
//THEN B WILL SEND ADDITIONAL HTTPS HEADERS
//IN ITS OPTIONS CALL

//   app A <--- app B
//    OPTIONS CALL(EITH ADD. HEADERS)
//THEN THE ACTUAL POST CALL WILL BE MADE ALONG WITH THE POST REQUEST

//   app A ---> app B
//   POST WITH ADD. HEADERS

//MAJOR ADDITIONAL HEADERS
//accept-control-allow-origin:*

//there are two types request :
//1.preflight request
//2.simple request

//to resolve cors errors we can add those https headers as options
